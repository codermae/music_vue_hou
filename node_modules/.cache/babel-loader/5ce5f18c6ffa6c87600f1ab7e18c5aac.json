{"remainingRequest":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\maey\\music_vue\\hout\\vue-admin-template\\src\\views\\dashboard\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\src\\views\\dashboard\\index.vue","mtime":1728699593927},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\babel.config.js","mtime":1728097319034},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICJlY2hhcnRzIjsKaW1wb3J0IHsgZ2V0RGF0YSwgZ2V0TGluZSwgZ2V0R2VucmUgfSBmcm9tICJAL2FwaS9kYXNoYm9hcmQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkRhc2hib2FyZCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOS4tOaXtuaVsOaNru+8jOeUqOS6juWxleekugoKICAgICAgLy8xLiDmrYzmm7LnsbvlnovliIbluIMt6aW85Zu+ICAyLiDnlKjmiLfmtLvot4PluqYt5oqY57q/5Zu+5Zu+CiAgICAgIC8vIOeUqOaItzHjgIHpn7PkuZAx44CB5q2M5omLMeOAgeinhumikeeahOaAu+aVsAogICAgICBpbml0RGF0YTogewogICAgICAgIGFydGlzdENvdW50OiAxMDAsCiAgICAgICAgc29uZ0NvdW50OiA1MDAsCiAgICAgICAgdXNlckNvdW50OiAzMDAKICAgICAgfSwKICAgICAgc29uZ3NEYXRhOiBbewogICAgICAgIHZhbHVlOiA1ODAsCiAgICAgICAgbmFtZTogJ0VtYWlsJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IDQ4NCwKICAgICAgICBuYW1lOiAnVW5pb24gQWRzJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6IDMwMCwKICAgICAgICBuYW1lOiAnVmlkZW8gQWRzJwogICAgICB9XSwKICAgICAgbGluZURhdGE6IHsKICAgICAgICBsYWJlbHM6IFsn5byg5LiJJywgJ+adjuWbmycsICfnjovkupQnXSwKICAgICAgICB2YWx1ZXM6IFsyMCwgMTUsIDVdCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIC8vCiAgICBnZXREYXRhKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAgIF90aGlzLmluaXREYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICBjb25zb2xlLmVycm9yKCdHRVQgRkFJTEVEJywgZXJyb3IpOwogICAgfSk7CiAgICAvLwogICAgZ2V0TGluZSgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIF90aGlzLmxpbmVEYXRhLmxhYmVscyA9IFtdOwogICAgICBfdGhpcy5saW5lRGF0YS52YWx1ZXMgPSBbXTsKICAgICAgcmVzcG9uc2UuZGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBfdGhpcy5saW5lRGF0YS5sYWJlbHMucHVzaChpdGVtLmRhdGUpOwogICAgICAgIF90aGlzLmxpbmVEYXRhLnZhbHVlcy5wdXNoKGl0ZW0uY291bnQpOwogICAgICB9KTsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy5saW5lRGF0YSkKICAgICAgX3RoaXMuZHJhd0FydGlzdHNDaGFydCgpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoJ0dFVCBMSU5FIEZBSUxFRCcsIGVycm9yKTsKICAgIH0pOwogICAgLy8KICAgIGdldEdlbnJlKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgX3RoaXMuc29uZ3NEYXRhID0gW107CiAgICAgIHJlc3BvbnNlLmRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgX3RoaXMuc29uZ3NEYXRhLnB1c2goewogICAgICAgICAgbmFtZTogaXRlbS5nZW5yZSwKICAgICAgICAgIHZhbHVlOiBpdGVtLm51bWJlck9mU29uZ3MKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuc29uZ3NEYXRhKQogICAgICBfdGhpcy5kcmF3U29uZ3NDaGFydCgpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoJ0dFVCBHRU5SRSBGQUlMRUQnLCBlcnJvcik7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXdTb25nc0NoYXJ0OiBmdW5jdGlvbiBkcmF3U29uZ3NDaGFydCgpIHsKICAgICAgdmFyIGNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzb25nc0NoYXJ0JykpOwogICAgICBjaGFydC5zZXRPcHRpb24oewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn5q2M5puy57G75Yir57uf6K6hJywKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgdG9wOiAnNSUnLAogICAgICAgICAgbGVmdDogJ2NlbnRlcicKICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICdBY2Nlc3MgRnJvbScsCiAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgIHJhZGl1czogWyc0MCUnLCAnNzAlJ10sCiAgICAgICAgICBhdm9pZExhYmVsT3ZlcmxhcDogZmFsc2UsCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxMCwKICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjZmZmJywKICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIKICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgcG9zaXRpb246ICdjZW50ZXInCiAgICAgICAgICB9LAogICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIGZvbnRTaXplOiA0MCwKICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCcKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGxhYmVsTGluZTogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IHRoaXMuc29uZ3NEYXRhCiAgICAgICAgfV0KICAgICAgfSk7CiAgICB9LAogICAgZHJhd0FydGlzdHNDaGFydDogZnVuY3Rpb24gZHJhd0FydGlzdHNDaGFydCgpIHsKICAgICAgdmFyIGNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcnRpc3RzQ2hhcnQnKSk7CiAgICAgIGNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfnlKjmiLfmtLvot4PluqYnLAogICAgICAgICAgbGVmdDogJ2NlbnRlcicKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHt9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICBkYXRhOiB0aGlzLmxpbmVEYXRhLmxhYmVscwogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHt9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICflnKjnur/kurrmlbAnLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgZGF0YTogdGhpcy5saW5lRGF0YS52YWx1ZXMKICAgICAgICB9XQogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyB0aGlzLmRyYXdVc2Vyc0NoYXJ0KCk7CiAgICAvLyB0aGlzLmRyYXdTb25nc0NoYXJ0KCk7CiAgICAvLyB0aGlzLmRyYXdBcnRpc3RzQ2hhcnQoKTsKICAgIC8vIHRoaXMuZHJhd1ZpZGVvc0NoYXJ0KCk7CiAgfQp9Ow=="},{"version":3,"names":["echarts","getData","getLine","getGenre","name","data","initData","artistCount","songCount","userCount","songsData","value","lineData","labels","values","created","_this","then","response","catch","error","console","map","item","push","date","count","drawArtistsChart","genre","numberOfSongs","drawSongsChart","methods","chart","init","document","getElementById","setOption","title","text","left","tooltip","trigger","legend","top","series","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","emphasis","fontSize","fontWeight","labelLine","xAxis","yAxis","mounted"],"sources":["src/views/dashboard/index.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"dashboard-text\">\n      <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic\n            group-separator=\",\"\n            :precision=\"2\"\n            :value=\"value2\"\n            :title=\"title\"\n          ></el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic title=\"男女比\">\n            <template slot=\"formatter\">\n              456/2\n            </template>\n          </el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic\n            group-separator=\",\"\n            :precision=\"2\"\n            decimal-separator=\".\"\n            :value=\"value1\"\n            :title=\"title\"\n          >\n            <template slot=\"prefix\">\n              <i class=\"el-icon-s-flag\" style=\"color: red\"></i>\n            </template>\n            <template slot=\"suffix\">\n              <i class=\"el-icon-s-flag\" style=\"color: blue\"></i>\n            </template>\n          </el-statistic>\n        </div>\n      </el-col>\n    </el-row>\n    </div>\n    <div class=\"charts-row\">\n      <div id=\"songsChart\" class=\"echarts1\" style=\"width: 500px; height: 400px\"></div>\n      <div id=\"artistsChart\" class=\"echarts2\" style=\"width: 500px; height: 400px\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nimport { getData,getLine,getGenre } from \"@/api/dashboard\";\n\nexport default {\n  name: \"Dashboard\",\n  data() {\n    return {\n      // 临时数据，用于展示\n\n      //1. 歌曲类型分布-饼图  2. 用户活跃度-折线图图\n      // 用户1、音乐1、歌手1、视频的总数\n      initData:{\n        artistCount:100,\n        songCount:500,\n        userCount:300,\n      },\n\n      songsData: [\n        { value: 580, name: 'Email' },\n        { value: 484, name: 'Union Ads' },\n        { value: 300, name: 'Video Ads' }\n      ],\n      lineData: {\n        labels: ['张三', '李四', '王五'],\n        values: [20, 15, 5]\n      }\n    };\n  },\n  created() {\n    //\n    getData().then(response => {\n      // console.log(response)\n      this.initData = response.data;\n    }).catch(error => {\n      console.error('GET FAILED',error)\n    })\n    //\n    getLine().then(response => {\n      this.lineData.labels = []\n      this.lineData.values = []\n      response.data.map(item => {\n        this.lineData.labels.push(item.date)\n        this.lineData.values.push(item.count)\n      })\n      // console.log(this.lineData)\n      this.drawArtistsChart()\n    }).catch(error => {\n      console.error('GET LINE FAILED',error)\n    })\n    //\n    getGenre().then(response => {\n      this.songsData = []\n      response.data.map(item => {\n        this.songsData.push({name:item.genre,value:item.numberOfSongs})\n      })\n      // console.log(this.songsData)\n      this.drawSongsChart()\n    }).catch(error => {\n      console.error('GET GENRE FAILED',error)\n    })\n\n  },\n  methods: {\n    drawSongsChart() {\n      const chart = echarts.init(document.getElementById('songsChart'));\n      chart.setOption({\n      title:{text:'歌曲类别统计',\n        left:'center'\n      },\n        tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    top: '5%',\n    left: 'center'\n  },\n  series: [\n    {\n      name: 'Access From',\n      type: 'pie',\n      radius: ['40%', '70%'],\n      avoidLabelOverlap: false,\n      itemStyle: {\n        borderRadius: 10,\n        borderColor: '#fff',\n        borderWidth: 2\n      },\n      label: {\n        show: false,\n        position: 'center'\n      },\n      emphasis: {\n        label: {\n          show: true,\n          fontSize: 40,\n          fontWeight: 'bold'\n        }\n      },\n      labelLine: {\n        show: false\n      },\n      data: this.songsData\n    }\n  ]\n      });\n    },\n    drawArtistsChart() {\n      const chart = echarts.init(document.getElementById('artistsChart'));\n      chart.setOption({\n        title: { text: '用户活跃度',\n          left: 'center'\n         },\n        tooltip: {},\n        xAxis: { data: this.lineData.labels },\n        yAxis: {},\n        series: [{\n          name: '在线人数',\n          type: 'line',\n          data: this.lineData.values\n        }]\n      });\n    }\n  },\n  mounted() {\n    // this.drawUsersChart();\n    // this.drawSongsChart();\n    // this.drawArtistsChart();\n    // this.drawVideosChart();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    // margin: 30px;\n  }\n  &-text {\n    font-size: 30px;\n    line-height: 46px;\n  }\n}\n.dashboard-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  // margin: 30px;\n\n  .charts-row {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 100px;\n  }\n\n  .dashboard-text {\n    position: absolute;\n    top: -1px; /* 调整这个值来控制文本的位置 */\n    // height: 300px;\n    width: 100%;\n    text-align: center;\n    font-size: 30px;\n    line-height: 46px;\n    z-index: 1; /* 确保文本在图表之上 */\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}