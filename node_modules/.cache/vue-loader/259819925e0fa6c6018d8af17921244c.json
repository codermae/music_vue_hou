{"remainingRequest":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\maey\\music_vue\\hout\\vue-admin-template\\src\\views\\dashboard\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\src\\views\\dashboard\\index.vue","mtime":1728701692235},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAiZWNoYXJ0cyI7CmltcG9ydCB7IGdldERhdGEsZ2V0TGluZSxnZXRHZW5yZSB9IGZyb20gIkAvYXBpL2Rhc2hib2FyZCI7CgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJEYXNoYm9hcmQiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDkuLTml7bmlbDmja7vvIznlKjkuo7lsZXnpLoKCiAgICAgIC8vMS4g5q2M5puy57G75Z6L5YiG5biDLemlvOWbviAgMi4g55So5oi35rS76LeD5bqmLeaKmOe6v+WbvuWbvgogICAgICAvLyDnlKjmiLcx44CB6Z+z5LmQMeOAgeatjOaJizHjgIHop4bpopHnmoTmgLvmlbAKICAgICAgaW5pdERhdGE6ewogICAgICAgIGFydGlzdENvdW50OjEwMCwKICAgICAgICBzb25nQ291bnQ6NTAwLAogICAgICAgIHVzZXJDb3VudDozMDAsCiAgICAgIH0sCgogICAgICBzb25nc0RhdGE6IFsKICAgICAgICB7IHZhbHVlOiA1ODAsIG5hbWU6ICdFbWFpbCcgfSwKICAgICAgICB7IHZhbHVlOiA0ODQsIG5hbWU6ICdVbmlvbiBBZHMnIH0sCiAgICAgICAgeyB2YWx1ZTogMzAwLCBuYW1lOiAnVmlkZW8gQWRzJyB9CiAgICAgIF0sCiAgICAgIGxpbmVEYXRhOiB7CiAgICAgICAgbGFiZWxzOiBbJ+W8oOS4iScsICfmnY7lm5snLCAn546L5LqUJ10sCiAgICAgICAgdmFsdWVzOiBbMjAsIDE1LCA1XQogICAgICB9LAogICAgICBsaWtlOiB0cnVlLAogICAgICAgIHZhbHVlMTogNDE1NC41NjQsCiAgICAgICAgdmFsdWUyOiAxMzE0LAogICAgICAgIHRpdGxlOiAi5aKe6ZW/5Lq65pWwIiwKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgLy8KICAgIGdldERhdGEoKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAgIHRoaXMuaW5pdERhdGEgPSByZXNwb25zZS5kYXRhOwogICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICBjb25zb2xlLmVycm9yKCdHRVQgRkFJTEVEJyxlcnJvcikKICAgIH0pCiAgICAvLwogICAgZ2V0TGluZSgpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICB0aGlzLmxpbmVEYXRhLmxhYmVscyA9IFtdCiAgICAgIHRoaXMubGluZURhdGEudmFsdWVzID0gW10KICAgICAgcmVzcG9uc2UuZGF0YS5tYXAoaXRlbSA9PiB7CiAgICAgICAgdGhpcy5saW5lRGF0YS5sYWJlbHMucHVzaChpdGVtLmRhdGUpCiAgICAgICAgdGhpcy5saW5lRGF0YS52YWx1ZXMucHVzaChpdGVtLmNvdW50KQogICAgICB9KQogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmxpbmVEYXRhKQogICAgICB0aGlzLmRyYXdBcnRpc3RzQ2hhcnQoKQogICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICBjb25zb2xlLmVycm9yKCdHRVQgTElORSBGQUlMRUQnLGVycm9yKQogICAgfSkKICAgIC8vCiAgICBnZXRHZW5yZSgpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICB0aGlzLnNvbmdzRGF0YSA9IFtdCiAgICAgIHJlc3BvbnNlLmRhdGEubWFwKGl0ZW0gPT4gewogICAgICAgIHRoaXMuc29uZ3NEYXRhLnB1c2goe25hbWU6aXRlbS5nZW5yZSx2YWx1ZTppdGVtLm51bWJlck9mU29uZ3N9KQogICAgICB9KQogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnNvbmdzRGF0YSkKICAgICAgdGhpcy5kcmF3U29uZ3NDaGFydCgpCiAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgIGNvbnNvbGUuZXJyb3IoJ0dFVCBHRU5SRSBGQUlMRUQnLGVycm9yKQogICAgfSkKCiAgfSwKICBtZXRob2RzOiB7CiAgICBkcmF3U29uZ3NDaGFydCgpIHsKICAgICAgY29uc3QgY2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NvbmdzQ2hhcnQnKSk7CiAgICAgIGNoYXJ0LnNldE9wdGlvbih7CiAgICAgIHRpdGxlOnt0ZXh0OifmrYzmm7LnsbvliKvnu5/orqEnLAogICAgICAgIGxlZnQ6J2NlbnRlcicKICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICB0cmlnZ2VyOiAnaXRlbScKICB9LAogIGxlZ2VuZDogewogICAgdG9wOiAnNSUnLAogICAgbGVmdDogJ2NlbnRlcicKICB9LAogIHNlcmllczogWwogICAgewogICAgICBuYW1lOiAnQWNjZXNzIEZyb20nLAogICAgICB0eXBlOiAncGllJywKICAgICAgcmFkaXVzOiBbJzQwJScsICc3MCUnXSwKICAgICAgYXZvaWRMYWJlbE92ZXJsYXA6IGZhbHNlLAogICAgICBpdGVtU3R5bGU6IHsKICAgICAgICBib3JkZXJSYWRpdXM6IDEwLAogICAgICAgIGJvcmRlckNvbG9yOiAnI2ZmZicsCiAgICAgICAgYm9yZGVyV2lkdGg6IDIKICAgICAgfSwKICAgICAgbGFiZWw6IHsKICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICBwb3NpdGlvbjogJ2NlbnRlcicKICAgICAgfSwKICAgICAgZW1waGFzaXM6IHsKICAgICAgICBsYWJlbDogewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgIGZvbnRTaXplOiA0MCwKICAgICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJwogICAgICAgIH0KICAgICAgfSwKICAgICAgbGFiZWxMaW5lOiB7CiAgICAgICAgc2hvdzogZmFsc2UKICAgICAgfSwKICAgICAgZGF0YTogdGhpcy5zb25nc0RhdGEKICAgIH0KICBdCiAgICAgIH0pOwogICAgfSwKICAgIGRyYXdBcnRpc3RzQ2hhcnQoKSB7CiAgICAgIGNvbnN0IGNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcnRpc3RzQ2hhcnQnKSk7CiAgICAgIGNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgdGl0bGU6IHsgdGV4dDogJ+eUqOaIt+a0u+i3g+W6picsCiAgICAgICAgICBsZWZ0OiAnY2VudGVyJwogICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHt9LAogICAgICAgIHhBeGlzOiB7IGRhdGE6IHRoaXMubGluZURhdGEubGFiZWxzIH0sCiAgICAgICAgeUF4aXM6IHt9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICflnKjnur/kurrmlbAnLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgZGF0YTogdGhpcy5saW5lRGF0YS52YWx1ZXMKICAgICAgICB9XQogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyB0aGlzLmRyYXdVc2Vyc0NoYXJ0KCk7CiAgICAvLyB0aGlzLmRyYXdTb25nc0NoYXJ0KCk7CiAgICAvLyB0aGlzLmRyYXdBcnRpc3RzQ2hhcnQoKTsKICAgIC8vIHRoaXMuZHJhd1ZpZGVvc0NoYXJ0KCk7CiAgfSwKfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"dashboard-text\">\n      <el-row :gutter=\"20\">\n      <el-col :span=\"8\">\n        <div>\n          <el-statistic\n            group-separator=\",\"\n            :precision=\"0\"\n            :value=\"initData.userCount\"\n            title=\"用户数量\"\n          ></el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"8\">\n        <div>\n          <el-statistic\n            title=\"歌曲数量\"\n            :value=\"initData.songCount\"\n          ></el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"8\">\n        <div>\n          <el-statistic\n            group-separator=\",\"\n            :precision=\"0\"\n            decimal-separator=\".\"\n            :value=\"initData.artistCount\"\n            title=\"歌手数量\"\n          >\n            <template slot=\"prefix\">\n              <i class=\"el-icon-s-flag\" style=\"color: red\"></i>\n            </template>\n            <template slot=\"suffix\">\n              <i class=\"el-icon-s-flag\" style=\"color: blue\"></i>\n            </template>\n          </el-statistic>\n        </div>\n      </el-col>\n    </el-row>\n    </div>\n    <div class=\"charts-row\">\n      <div id=\"songsChart\" class=\"echarts1\" style=\"width: 500px; height: 400px\"></div>\n      <div id=\"artistsChart\" class=\"echarts2\" style=\"width: 500px; height: 400px\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nimport { getData,getLine,getGenre } from \"@/api/dashboard\";\n\n\nexport default {\n  name: \"Dashboard\",\n  data() {\n    return {\n      // 临时数据，用于展示\n\n      //1. 歌曲类型分布-饼图  2. 用户活跃度-折线图图\n      // 用户1、音乐1、歌手1、视频的总数\n      initData:{\n        artistCount:100,\n        songCount:500,\n        userCount:300,\n      },\n\n      songsData: [\n        { value: 580, name: 'Email' },\n        { value: 484, name: 'Union Ads' },\n        { value: 300, name: 'Video Ads' }\n      ],\n      lineData: {\n        labels: ['张三', '李四', '王五'],\n        values: [20, 15, 5]\n      },\n      like: true,\n        value1: 4154.564,\n        value2: 1314,\n        title: \"增长人数\",\n    };\n  },\n  created() {\n    //\n    getData().then(response => {\n      // console.log(response)\n      this.initData = response.data;\n    }).catch(error => {\n      console.error('GET FAILED',error)\n    })\n    //\n    getLine().then(response => {\n      this.lineData.labels = []\n      this.lineData.values = []\n      response.data.map(item => {\n        this.lineData.labels.push(item.date)\n        this.lineData.values.push(item.count)\n      })\n      // console.log(this.lineData)\n      this.drawArtistsChart()\n    }).catch(error => {\n      console.error('GET LINE FAILED',error)\n    })\n    //\n    getGenre().then(response => {\n      this.songsData = []\n      response.data.map(item => {\n        this.songsData.push({name:item.genre,value:item.numberOfSongs})\n      })\n      // console.log(this.songsData)\n      this.drawSongsChart()\n    }).catch(error => {\n      console.error('GET GENRE FAILED',error)\n    })\n\n  },\n  methods: {\n    drawSongsChart() {\n      const chart = echarts.init(document.getElementById('songsChart'));\n      chart.setOption({\n      title:{text:'歌曲类别统计',\n        left:'center'\n      },\n        tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    top: '5%',\n    left: 'center'\n  },\n  series: [\n    {\n      name: 'Access From',\n      type: 'pie',\n      radius: ['40%', '70%'],\n      avoidLabelOverlap: false,\n      itemStyle: {\n        borderRadius: 10,\n        borderColor: '#fff',\n        borderWidth: 2\n      },\n      label: {\n        show: false,\n        position: 'center'\n      },\n      emphasis: {\n        label: {\n          show: true,\n          fontSize: 40,\n          fontWeight: 'bold'\n        }\n      },\n      labelLine: {\n        show: false\n      },\n      data: this.songsData\n    }\n  ]\n      });\n    },\n    drawArtistsChart() {\n      const chart = echarts.init(document.getElementById('artistsChart'));\n      chart.setOption({\n        title: { text: '用户活跃度',\n          left: 'center'\n         },\n        tooltip: {},\n        xAxis: { data: this.lineData.labels },\n        yAxis: {},\n        series: [{\n          name: '在线人数',\n          type: 'line',\n          data: this.lineData.values\n        }]\n      });\n    }\n  },\n  mounted() {\n    // this.drawUsersChart();\n    // this.drawSongsChart();\n    // this.drawArtistsChart();\n    // this.drawVideosChart();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    // margin: 30px;\n  }\n  &-text {\n    font-size: 30px;\n    line-height: 46px;\n  }\n}\n.dashboard-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  // margin: 30px;\n\n  .charts-row {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 100px;\n  }\n\n  .dashboard-text {\n    position: absolute;\n    top: -1px; /* 调整这个值来控制文本的位置 */\n    // height: 300px;\n    width: 100%;\n    text-align: center;\n    font-size: 30px;\n    line-height: 46px;\n    z-index: 1; /* 确保文本在图表之上 */\n    background-color: #ECEFF1;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.1);\n  }\n}\n</style>\n"]}]}