{"remainingRequest":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\maey\\music_vue\\hout\\vue-admin-template\\src\\views\\dashboard\\index.vue?vue&type=style&index=0&id=106c86ed&lang=scss&scoped=true","dependencies":[{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\src\\views\\dashboard\\index.vue","mtime":1728699593927},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\maey\\music_vue\\hout\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kYXNoYm9hcmQgewogICYtY29udGFpbmVyIHsKICAgIC8vIG1hcmdpbjogMzBweDsKICB9CiAgJi10ZXh0IHsKICAgIGZvbnQtc2l6ZTogMzBweDsKICAgIGxpbmUtaGVpZ2h0OiA0NnB4OwogIH0KfQouZGFzaGJvYXJkLWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIC8vIG1hcmdpbjogMzBweDsKCiAgLmNoYXJ0cy1yb3cgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgIHdpZHRoOiAxMDAlOwogICAgbWFyZ2luLXRvcDogMTAwcHg7CiAgfQoKICAuZGFzaGJvYXJkLXRleHQgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiAtMXB4OyAvKiDosIPmlbTov5nkuKrlgLzmnaXmjqfliLbmlofmnKznmoTkvY3nva4gKi8KICAgIC8vIGhlaWdodDogMzAwcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGZvbnQtc2l6ZTogMzBweDsKICAgIGxpbmUtaGVpZ2h0OiA0NnB4OwogICAgei1pbmRleDogMTsgLyog56Gu5L+d5paH5pys5Zyo5Zu+6KGo5LmL5LiKICovCiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"dashboard-text\">\n      <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic\n            group-separator=\",\"\n            :precision=\"2\"\n            :value=\"value2\"\n            :title=\"title\"\n          ></el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic title=\"男女比\">\n            <template slot=\"formatter\">\n              456/2\n            </template>\n          </el-statistic>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div>\n          <el-statistic\n            group-separator=\",\"\n            :precision=\"2\"\n            decimal-separator=\".\"\n            :value=\"value1\"\n            :title=\"title\"\n          >\n            <template slot=\"prefix\">\n              <i class=\"el-icon-s-flag\" style=\"color: red\"></i>\n            </template>\n            <template slot=\"suffix\">\n              <i class=\"el-icon-s-flag\" style=\"color: blue\"></i>\n            </template>\n          </el-statistic>\n        </div>\n      </el-col>\n    </el-row>\n    </div>\n    <div class=\"charts-row\">\n      <div id=\"songsChart\" class=\"echarts1\" style=\"width: 500px; height: 400px\"></div>\n      <div id=\"artistsChart\" class=\"echarts2\" style=\"width: 500px; height: 400px\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nimport { getData,getLine,getGenre } from \"@/api/dashboard\";\n\nexport default {\n  name: \"Dashboard\",\n  data() {\n    return {\n      // 临时数据，用于展示\n\n      //1. 歌曲类型分布-饼图  2. 用户活跃度-折线图图\n      // 用户1、音乐1、歌手1、视频的总数\n      initData:{\n        artistCount:100,\n        songCount:500,\n        userCount:300,\n      },\n\n      songsData: [\n        { value: 580, name: 'Email' },\n        { value: 484, name: 'Union Ads' },\n        { value: 300, name: 'Video Ads' }\n      ],\n      lineData: {\n        labels: ['张三', '李四', '王五'],\n        values: [20, 15, 5]\n      }\n    };\n  },\n  created() {\n    //\n    getData().then(response => {\n      // console.log(response)\n      this.initData = response.data;\n    }).catch(error => {\n      console.error('GET FAILED',error)\n    })\n    //\n    getLine().then(response => {\n      this.lineData.labels = []\n      this.lineData.values = []\n      response.data.map(item => {\n        this.lineData.labels.push(item.date)\n        this.lineData.values.push(item.count)\n      })\n      // console.log(this.lineData)\n      this.drawArtistsChart()\n    }).catch(error => {\n      console.error('GET LINE FAILED',error)\n    })\n    //\n    getGenre().then(response => {\n      this.songsData = []\n      response.data.map(item => {\n        this.songsData.push({name:item.genre,value:item.numberOfSongs})\n      })\n      // console.log(this.songsData)\n      this.drawSongsChart()\n    }).catch(error => {\n      console.error('GET GENRE FAILED',error)\n    })\n\n  },\n  methods: {\n    drawSongsChart() {\n      const chart = echarts.init(document.getElementById('songsChart'));\n      chart.setOption({\n      title:{text:'歌曲类别统计',\n        left:'center'\n      },\n        tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    top: '5%',\n    left: 'center'\n  },\n  series: [\n    {\n      name: 'Access From',\n      type: 'pie',\n      radius: ['40%', '70%'],\n      avoidLabelOverlap: false,\n      itemStyle: {\n        borderRadius: 10,\n        borderColor: '#fff',\n        borderWidth: 2\n      },\n      label: {\n        show: false,\n        position: 'center'\n      },\n      emphasis: {\n        label: {\n          show: true,\n          fontSize: 40,\n          fontWeight: 'bold'\n        }\n      },\n      labelLine: {\n        show: false\n      },\n      data: this.songsData\n    }\n  ]\n      });\n    },\n    drawArtistsChart() {\n      const chart = echarts.init(document.getElementById('artistsChart'));\n      chart.setOption({\n        title: { text: '用户活跃度',\n          left: 'center'\n         },\n        tooltip: {},\n        xAxis: { data: this.lineData.labels },\n        yAxis: {},\n        series: [{\n          name: '在线人数',\n          type: 'line',\n          data: this.lineData.values\n        }]\n      });\n    }\n  },\n  mounted() {\n    // this.drawUsersChart();\n    // this.drawSongsChart();\n    // this.drawArtistsChart();\n    // this.drawVideosChart();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    // margin: 30px;\n  }\n  &-text {\n    font-size: 30px;\n    line-height: 46px;\n  }\n}\n.dashboard-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  // margin: 30px;\n\n  .charts-row {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 100px;\n  }\n\n  .dashboard-text {\n    position: absolute;\n    top: -1px; /* 调整这个值来控制文本的位置 */\n    // height: 300px;\n    width: 100%;\n    text-align: center;\n    font-size: 30px;\n    line-height: 46px;\n    z-index: 1; /* 确保文本在图表之上 */\n  }\n}\n</style>\n"]}]}